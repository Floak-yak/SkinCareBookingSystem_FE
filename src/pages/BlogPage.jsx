import React, { useState, useEffect } from "react";
import { useNavigate, Link } from "react-router-dom";
import { Input, Select, Button } from "antd";
import useAuth from "../hooks/useAuth";
import apiClient from "../api/apiClient";
import "../styles/blogPage.css";

const { Option } = Select;

const BlogPage = () => {
  const [posts, setPosts] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  const { user: currentUser } = useAuth();
  const [searchTerm, setSearchTerm] = useState("");
  const [filterCategory, setFilterCategory] = useState("");

  const navigate = useNavigate();

  // üü¢ G·ªçi API ngay t·∫°i component
  useEffect(() => {
    let isMounted = true;

    apiClient
      .get("/Post/GetPosts") // G·ªçi API GET /api/Post/GetPosts
      .then((res) => {
        if (isMounted) {
          setPosts(res.data);
          setLoading(false);
        }
      })
      .catch((err) => {
        if (isMounted) {
          setError(err.message);
          setLoading(false);
        }
      });

    return () => {
      isMounted = false;
    };
  }, []);

  // üü° L·ªçc b√†i vi·∫øt
  const filteredPosts = posts?.filter((post) => {
    // Gi·∫£ s·ª≠ postStatus = 1 => Approved
    const isApproved = post.postStatus === 1;
    const matchesTitle = post.title
      .toLowerCase()
      .includes(searchTerm.toLowerCase());
    // Gi·∫£ s·ª≠ category c√≥ thu·ªôc t√≠nh name
    const matchesCategory = filterCategory
      ? post.category?.name === filterCategory
      : true;
    return isApproved && matchesTitle && matchesCategory;
  });

  if (loading) return <p>ƒêang t·∫£i b√†i vi·∫øt...</p>;
  if (error) return <p>C√≥ l·ªói x·∫£y ra khi t·∫£i b√†i vi·∫øt: {error}</p>;

  const handleCardClick = (id) => {
    navigate(`/blogs/${id}`);
  };

  return (
    <div className="blog-page">
      <h2>Danh s√°ch b√†i vi·∫øt</h2>

      <div className="blog-filters">
        <div className="filters-group">
          <Input
            placeholder="T√¨m ki·∫øm b√†i vi·∫øt"
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            className="blog-search-input"
          />
          <Select
            placeholder="Ch·ªçn danh m·ª•c"
            onChange={(value) => setFilterCategory(value)}
            className="blog-category-select"
            defaultValue=""
          >
            <Option value="">T·∫•t c·∫£</Option>
            <Option value="ChƒÉm s√≥c da">ChƒÉm s√≥c da</Option>
            <Option value="H∆∞·ªõng d·∫´n skincare">H∆∞·ªõng d·∫´n skincare</Option>
            <Option value="S·∫£n ph·∫©m">S·∫£n ph·∫©m</Option>
          </Select>
          {currentUser && (
            <div className="create-blog-btn-group">
              <Button type="primary" className="create-blog-btn">
                <Link to="/blogs/create" style={{ color: "#fff" }}>
                  ƒêƒÉng B√†i Vi·∫øt
                </Link>
              </Button>
            </div>
          )}
        </div>
      </div>

      <div className="blog-grid">
        {filteredPosts.map((post) => {
          // L·∫•y link ·∫£nh
          const imageUrl = post.image?.description || "/no-image.jpg";
          // T√™n t√°c gi·∫£
          const authorName = post.user?.fullName || "·∫®n danh";
          // Ng√†y ƒëƒÉng
          const date = new Date(post.datePost).toLocaleDateString("vi-VN");

          return (
            <div
              key={post.id}
              className="blog-card"
              onClick={() => handleCardClick(post.id)}
            >
              <img alt={post.title} src={imageUrl} className="blog-card-image" />
              <div className="blog-card-content">
                <h3>{post.title}</h3>
                <p>{`ƒêƒÉng b·ªüi ${authorName} - ${date}`}</p>
              </div>
            </div>
          );
        })}
      </div>
    </div>
  );
};

export default BlogPage;
